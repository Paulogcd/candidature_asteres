# Packages: 
using Pkg
Pkg.activate(".")
Pkg.add("Plots")
using Plots
Pkg.add("DataFrames")
using DataFrames
Pkg.add("CSV")
using CSV
Pkg.add("XML")
using XML

date = collect(1800:2020)

# France et Paris: 
begin 
    IPC_fr = [.000428705	.000442066	.000474133	.000473751	.000425651	.000422979	.000416489	.000396638	.000402364	.000369152	.000464208	.000511545	.00057377	.000471461	.000390148	.000542466	.000542085	.000624924	.000513835	.000428705	.00038175	.000375325	.000353908	.000352837	.000351231	.00035605	.000369971	.000384962	.000421906	.000436362	.000426189	.000422977	.000420299	.000392993	.000389781	.000392993	.000397812	.000404772	.000424047	.000442787	.000435291	.000406914	.000418158	.000403166	.000417622	.000412268	.000440645	.000468487	.000403166	.0003946	.000390316	.000389781	.000406914	.00045403	.000508107	.000542374	.000551476	.000515603	.000467951	.000443322	.000493651	.000518815	.000503288	.000496864	.000481872	.000478124	.000501682	.000531665	.000542374	.000508107	.000519886	.000605017	.000560578	.000578246	.000587884	.000520957	.000540232	.000553617	.000560042	.000551476	.000573963	.000572892	.000560042	.000565932	.000553617	.000534342	.000532736	.00052524	.000504359	.000511855	.000522028	.000531665	.000508643	.00049847	.000513997	.000505966	.000499541	.000495257	.000501147	.000496328	.000499541	.000480266	.000474376	.000501682	.000494186	.000478659	.000474912	.000500076	.000507036	.000503288	.000516674	.000568609	.000581459	.000572892	.000572892	.000681742	.000767676	.000916628	.001185887	.001483791	.002045225	.001787424	.001718677	.001907731	.00217699	.002331671	.003036329	.003168094	.003162365	.003357148	.003380064	.003248299	.002961853	.002864461	.002744154	.002514997	.002698322	.003397251	.003855565	.004107637	.004875313	.005717464	.006868978	.008530365	.010426639	.01546809	.023597431	.035204227	.05586845	.063230115	.069554845	.080869467	.090482598	.088964434	.089342543	.090167507	.093960054	.096801599	.11141608	.118262142	.122570292	.126597724	.132693297	.139195624	.143572521	.147554122	.151678305	.155802489	.162676128	.173215708	.18238056	.192461898	.204376206	.21903997	.249283982	.278611509	.305647824	.334058866	.364302878	.403711743	.458242614	.519647124	.581051635	.636957234	.684156223	.72402333	.74326952	.766639893	.787260811	.815671853	.84316641	.870147735	.891226895	.909776556	.924953552	.940973714	.959523375	.971327704	.978073036	.983371373	1	1.016	1.036	1.058	1.080	1.100	1.118	1.135	1.167	1.168	1.185	1.210	1.234	1.245	1.251	1.252	1.254	1.267	1.290	1.305	1.311]
    IPC_fr = IPC_fr'
    IPC_fr = vec(IPC_fr)
    # Plots.plot(date.IPC_fr)

    gap_IPL_fr = zeros(1936-1800)
    IPL_fr = [.000680683	.000815525	.000791743	.000761446	.000798286	.000855932	.00114703	.001711951	.002022452	.002194248	.002737365	.003363086	.004181082	.005206955	.005535493	.006247982	.007440243	.008409555	.009558506	.011629484	.014977381	.018743697	.023259784	.028584181	.035030187	.040270743	.047074308	.057987881	.071220716	.086216268	.09509584	.10056612	.108152682	.11946253	.124348828	.131756332	.143707406	.158931189	.182457476	.204223219	.236651345	.27269087	.304498139	.344474601	.412766133	.458200881	.483905875	.508633408	.528476478	.54591206	.57126584	.611873941	.677922615	.759680895	.826603455	.869620379	.849026065	.83678996	.83524208	.827629612	.846153846	.842587876	.859908304	.920020377	1	1.079	1.173	1.313	1.510	1.743	1.953	2.082	2.099	1.950	2.050	2.172	2.159	2.114	2.075	2.038	2.057	2.119	2.182	2.253	2.380]
    IPL_fr = IPL_fr'
    IPL_fr = vcat(gap_IPL_fr,IPL_fr)
    IPL_fr = Array(IPL_fr)
    IPL_fr = vec(IPL_fr)

    typeof(date)
    typeof(IPC_fr)
    typeof(IPL_fr)

    data = DataFrame(date = date, IPL_fr = IPL_fr, IPC_fr = IPC_fr)

    IPL_Paris = [8.01054E-05	8.15944E-05	8.30833E-05	8.15944E-05	8.72524E-05	9.43993E-05	9.32082E-05	9.43993E-05	9.73772E-05	8.45723E-05	8.60612E-05	9.02303E-05	9.02303E-05	9.17192E-05	0.000106013	0.000108693	0.000118818	0.000134601	0.000140259	0.000153064	0.000151873	0.000148895	0.000150384	0.00015902	0.000153064	0.000163189	0.000175994	0.000174803	0.000194754	0.00020339	0.000190585	0.000174803	0.000170336	0.000164678	0.000145917	0.000150384	0.00015902	0.000168847	0.000175994	0.000200412	0.000217684	0.000230489	0.000223342	0.000227809	0.000214706	0.000214706	0.000212026	0.000213217	0.000212026	0.000221853	0.000224831	0.000224831	0.000224831	0.000231978	0.00022632	0.000217684	0.000219173	0.000224831	0.000224831	0.000233467	0.000246272	0.000246272	0.000247761	0.00025193	0.000250739	0.000247761	0.000250739	0.000253419	0.000256397	0.000262055	0.00027486	0.000283496	0.000286474	0.000289154	0.00029779	0.000314257	0.000349937	0.000332097	0.000323863	0.000326608	0.000323863	0.000344448	0.000380128	0.000440509	0.000484423	0.000546177	0.000606558	0.000638121	0.000647727	0.00067929	0.000783585	0.000831616	0.000868668	0.000863179	0.000846711	0.000802797	0.000767117	0.000749277	0.000746533	0.000771234	0.000868668	0.001031972	0.001258402	0.00135858	0.001372303	0.001501158	0.001642113	0.001796303	0.00196497	0.002149476	0.002351305	0.003273427	0.004141527	0.005120732	0.006690605	0.008894406	0.012766297	0.019132827	0.022766814	0.024473365	0.030003459	0.037184627	0.044466529	0.057867901	0.068229074	0.082754489	0.087713601	0.084393683	0.097920456	0.112093819	0.116399177	0.123344799	0.134360047	0.148015601	0.174606084	0.187846976	0.216810948	0.242575817	0.252665299	0.289826515	0.33962538	0.386578199	0.395205524	0.411347164	0.438680821	0.48545395	0.542799827	0.634956722	0.786542627	0.96375606	1.132984815	1.151316218	1.035510334	0.96566987	0.954858748	0.892777236	0.819887164	0.790558174	0.801850588	0.879334258	1	1.094	1.190	1.340	1.521	1.738	1.936	2.114	2.262	2.148	2.393	2.841	2.906	2.870	2.819	2.775	2.859	3.065	3.268	3.479	3.724]
    IPL_Paris = IPL_Paris'
    gap_IPL_paris = zeros(40)
    IPL_Paris = vcat(gap_IPL_paris,IPL_Paris)
    IPL_Paris = vec(IPL_Paris)

    data.IPL_Paris = IPL_Paris

    to_plot = data[data.date .>= 1950,:]

    Plots.plot(to_plot.date,to_plot.IPL_fr ./ to_plot.IPC_fr, label = "IPL/IPC en France")
    Plots.plot!(to_plot.date,to_plot.IPL_Paris ./ to_plot.IPC_fr, label = "IPL/IPC Ã  Paris")
    savefig("Evolution_prix_immobiliers_Paris.png")
end

# Writing: 
begin 
    CSV.write("data.csv",to_plot)
end

